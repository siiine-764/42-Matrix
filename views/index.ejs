<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Matrix</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    body {margin: 0; overflow: hidden; cursor: pointer;}
</style>
  <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet" type="text/css">
  <script src="https://apis.google.com/js/api:client.js"></script>
  <script src="https://apis.google.com/js/platform.js" async defer></script>
  <meta name="google-signin-client_id" content="712108051146-bqlpasnp0q2q6ouqqrtneb8rsjlf9ale.apps.googleusercontent.com">
  <script>
  var googleUser = {};
  var startApp = function() {
    gapi.load('auth2', function(){
      // Retrieve the singleton for the GoogleAuth library and set up the client.
      auth2 = gapi.auth2.init({
        client_id: '712108051146-bqlpasnp0q2q6ouqqrtneb8rsjlf9ale.apps.googleusercontent.com',
        cookiepolicy: 'single_host_origin',
        // Request scopes in addition to 'profile' and 'email'
        //scope: 'additional_scope'
      });
      attachSignin(document.getElementById('customBtn'));
    });
  };

  function attachSignin(element) {
    console.log(element.id);
    auth2.attachClickHandler(element, {},
        function(googleUser) {
          document.getElementById('name').innerText = "Signed in: " +
              googleUser.getBasicProfile().getName();
        }, function(error) {
          alert(JSON.stringify(error, undefined, 2));
        });
  }
  </script>

  <style type="text/css">
    #customBtn {
      display: inline-block;
      background: white;
      color: #444;
      width: 190px;
      border-radius: 5px;
      border: thin solid #888;
      box-shadow: 1px 1px 1px grey;
      white-space: nowrap;
    }
    #customBtn:hover {
      cursor: pointer;
    }
    span.label {
      font-family: serif;
      font-weight: normal;
    }
    span.icon {
      background: url('/identity/sign-in/g-normal.png') transparent 5px 50% no-repeat;
      display: inline-block;
      vertical-align: middle;
      width: 42px;
      height: 42px;
    }
    span.buttonText {
      display: inline-block;
      vertical-align: middle;
      padding-left: 42px;
      padding-right: 42px;
      font-size: 14px;
      font-weight: bold;
      /* Use the Roboto font that is loaded in the <head> */
      font-family: 'Roboto', sans-serif;
    }
  </style>
</head>

<body class="h-screen">
  <div class="flex justify-center items-center" style="position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); z-index: 2; background-color: rgb(255, 255, 255);">
    <a href="./42" class="flex cursor-pointer border border-red text-red p-2 px-4  font-semibold rounded shadow-xl">
      <div>Login</div>
      <div class="flex px-0.5"></div>
      <img class="w-6 invert" src="/images/42.png" alt="42">
    </a>
  </div>
</body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.7.0/p5.min.js"></script>


<script>
    
  var Chars = ["D","3","E","7","1","0","1","M","1"];
  var Cells = [];	
  var tileSize = 16;
  var dropspeed = 8;
  var tiles = 160;
  var x = 0;
  function setup() {
    
    noStroke();
    colorMode(HSB, 360, 100, 1, .1);
    createCanvas(window.innerWidth, window.innerHeight);
    for (var i = 0; i < tiles; i++) {
    console.log(width / tileSize);
      x += tileSize;
      var y = round(random(height / dropspeed) * tileSize) - window.innerHeight;	
      var r = tileSize;
      var h = random(100, 150);
    var t = random(.8, 8);
    var u = random(.3, .8);
      Cells[i] = new Matrix(x, y, r, h, t, u);
    }
  }
  
  
  
  function draw() {
  
     background(100, 100, 0, .009);
  
    for (var i =0; i < tiles; i++) {
      Cells[i].spread();
      Cells[i].update();
    }
  }
  
  function Matrix(isX, isY, myD, myHue, newX, newY) {
    this.x = isX;
    this.y = isY;
    this.tS = newX;
    this.tU = newY;
    this.diameter = myD;
    this.h = myHue;
    this.spread = function() {
      var tx = 0;
      var ty = round(random(0, 2));
      this.x += (tx * tileSize);
      if ((this.x > width+(tileSize * 8)) || (this.x < -tileSize * 8)) {this.x = random(width / tileSize) * tileSize;}
      this.y += (ty * dropspeed);
      if ((this.y > height+(tileSize * 8)) || (this.y < -tileSize * 8)) {this.y = random(-height / tileSize) * tileSize; this.x = random(width / tileSize) * tileSize;}
  
    if ((this.y < ((window.innerHeight)))) this.y+= this.tU;
    
  }
    
    this.update = function() {
    var thecol = round(random(0, 10));
      var thebri = 0;
     
      if (thecol == 10) {thecol = 0; thebri = 100;}
      else {myHue = 120; thecol = 100; thebri = 50;}
      fill(myHue, thecol, thebri, .7);
      textSize(14);
      textFont('Verdana');
      var thechar = round(random(0, 8));
      text((Chars[(thechar)]), this.x, this.y);
    }
  }
  
  function mousePressed() {
    tileSize = random(0.3, 2);
    tiles = random(1, 239);
  
    for (var i = 0; i < tiles; i++) {
      var x = random(width / tileSize) * tileSize;
      var y = random((height / tileSize) * tileSize) - height;
      var r = tileSize;
      var h = random(10, 300);
    var t = random(.5, 2);
    var u = random(.3, 3.8);
      Cells[i] = new Matrix(x, y, r, h, t, u);
    }
    
  }
  
  </script>
</html>